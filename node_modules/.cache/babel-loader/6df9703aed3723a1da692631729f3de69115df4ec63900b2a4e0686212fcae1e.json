{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst taskSlice = createSlice({\n  name: 'Task',\n  initialState: {\n    task: []\n  },\n  reducers: {\n    addTasks: description => {\n      const newTask = {\n        id: tasks.length + 1,\n        description,\n        isDone: false\n      };\n      setTasks([...tasks, newTask]);\n    },\n    editTasks: id => {\n      // implement editing logic here\n      tasks.map(task => {\n        if (id === task.id) {\n          const updateTask = {\n            description: task.description,\n            isDone: true\n          };\n          setTasks([...tasks, updateTask]);\n        }\n      });\n    },\n    deleteTasks: id => {\n      setTasks(tasks.filter(task => task.id !== id));\n    }\n  }\n});\nexport const {} = taskSlice.actions;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","taskSlice","name","initialState","task","reducers","addTasks","description","newTask","id","tasks","length","isDone","setTasks","editTasks","map","updateTask","deleteTasks","filter","actions","reducer"],"sources":["C:/Users/Anwender/Desktop/my projects/GoMyCode/redux-chekpoint/React-redux/src/redux/taskSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst taskSlice =createSlice ({\r\n    name :'Task' ,\r\n    initialState : {\r\n        task :[],\r\n    },\r\n    reducers :{\r\n        addTasks : description => {\r\n            const newTask = { id: tasks.length + 1, description, isDone: false };\r\n            setTasks([...tasks, newTask]);\r\n          },\r\n        \r\n          editTasks : id => {\r\n            // implement editing logic here\r\n            tasks.map(task => {\r\n              if(id === task.id){\r\n                const updateTask = {description : task.description , isDone: true };\r\n            setTasks([...tasks, updateTask]);\r\n            }\r\n          }\r\n              )\r\n           \r\n        \r\n          },\r\n        \r\n        deleteTasks: id => {\r\n            setTasks(tasks.filter(task => task.id !== id));\r\n          },\r\n\r\n    },\r\n\r\n} )\r\nexport const {} = taskSlice.actions\r\nexport default taskSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAG9C,MAAMC,SAAS,GAAED,WAAW,CAAE;EAC1BE,IAAI,EAAE,MAAM;EACZC,YAAY,EAAG;IACXC,IAAI,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACNC,QAAQ,EAAGC,WAAW,IAAI;MACtB,MAAMC,OAAO,GAAG;QAAEC,EAAE,EAAEC,KAAK,CAACC,MAAM,GAAG,CAAC;QAAEJ,WAAW;QAAEK,MAAM,EAAE;MAAM,CAAC;MACpEC,QAAQ,CAAC,CAAC,GAAGH,KAAK,EAAEF,OAAO,CAAC,CAAC;IAC/B,CAAC;IAEDM,SAAS,EAAGL,EAAE,IAAI;MAChB;MACAC,KAAK,CAACK,GAAG,CAACX,IAAI,IAAI;QAChB,IAAGK,EAAE,KAAKL,IAAI,CAACK,EAAE,EAAC;UAChB,MAAMO,UAAU,GAAG;YAACT,WAAW,EAAGH,IAAI,CAACG,WAAW;YAAGK,MAAM,EAAE;UAAK,CAAC;UACvEC,QAAQ,CAAC,CAAC,GAAGH,KAAK,EAAEM,UAAU,CAAC,CAAC;QAChC;MACF,CAAC,CACI;IAGL,CAAC;IAEHC,WAAW,EAAER,EAAE,IAAI;MACfI,QAAQ,CAACH,KAAK,CAACQ,MAAM,CAACd,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKA,EAAE,CAAC,CAAC;IAChD;EAEN;AAEJ,CAAC,CAAE;AACH,OAAO,MAAM,CAAC,CAAC,GAAGR,SAAS,CAACkB,OAAO;AACnC,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}