{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anwender\\\\Desktop\\\\my projects\\\\GoMyCode\\\\redux-chekpoint\\\\React-redux\\\\src\\\\components\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddTask from '../redux/taskSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task() {\n  _s();\n  const [description, setDescription] = useState();\n  const dispatch = useDispatch();\n  const item = useSelector(state => state.newTask.Tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    id: \"user\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forms\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => setDescription(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            dispatch(AddTasks({\n              id: item.length + 1,\n              description\n            }));\n            setDescription('');\n          },\n          children: \"Add \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forms-content\",\n        children: item.length > 0 ? item.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\"task  user  \", task.id, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"description : \", task.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \" Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)) : /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"No USER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"5YBQU3Jku3F2Fxg/pJUIGHf1fmY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","AddTask","jsxDEV","_jsxDEV","Task","_s","description","setDescription","dispatch","item","state","newTask","Tasks","className","id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","onClick","AddTasks","length","map","task","_c","$RefreshReg$"],"sources":["C:/Users/Anwender/Desktop/my projects/GoMyCode/redux-chekpoint/React-redux/src/components/Task.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AddTask from '../redux/taskSlice';\r\n\r\nfunction Task() {\r\n    const [description, setDescription] = useState();\r\n    const dispatch = useDispatch();\r\n    const item = useSelector((state)=>state.newTask.Tasks);\r\n\r\n\r\n  return (\r\n    <div className='card' id='user'>\r\n        <div className='forms'>\r\n            <h1> Task</h1>\r\n            <div className='card1'>\r\n                <input type='text'   onChange={(e) =>setDescription(e.target.value)}/>\r\n                <button  onClick={()=>{dispatch(AddTasks({id: item.length+1 , description }))\r\n                setDescription('')\r\n                }}>Add </button>\r\n            </div>\r\n            <div className='forms-content'>\r\n                { item.length > 0  ? item.map((task) =>\r\n                    <div className='content' key={task.id}>\r\n                        <h1>task  user  {task.id} </h1>\r\n                        <h4>description : {task.description}</h4>\r\n                        <button \r\n                        //onClick={()=> dispatch(deleteUser({id: task.id}))}\r\n                        >Delete</button>\r\n                        <button \r\n                        /*onClick={()=>{\r\n                                setEdit(true)\r\n                                setId(task.id)\r\n                            }}*/\r\n                        > Update</button>\r\n            \r\n                        {/*edit && id==task.id &&(\r\n                            <>\r\n                                <input type='text' placeholder='enter your name' onChange={(e) =>setFname(e.target.value)}/>   \r\n                                <input type='text' placeholder='enter your Last name' onChange={(e) =>setLname(e.target.value)} />\r\n                                <input type='text' placeholder='enter your section' onChange={(e) =>setBranche(e.target.value)}/>\r\n                                <button onClick={()=>{\r\n                                    dispatch(updateUser({id:task.id ,name:fname ,lastName:lname,section:branche}))\r\n                                    setFname('')\r\n                                    setLname('')\r\n                                    setBranche('')\r\n                                    setEdit(false)\r\n                                }}>Send</button>\r\n                            </>\r\n                              )*/} \r\n                    </div>\r\n                \r\n                              ) : <h5>No USER</h5>}\r\n                \r\n                </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}